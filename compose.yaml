services:
  postgres:
    image: postgres:13
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - network
    restart: always

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6377:6379"
    networks:
      - network
    restart: always

  stage-nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: stage-nginx
    ports:
      - "80:80"
    networks:
      - network
    restart: always

  stage_container:
    build:
      context: .
      dockerfile: Dockerfile_dev
    container_name: stage_container
    environment:
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_S3_END_POINT: ${AWS_S3_END_POINT}
    ports:
      - "8081:8081"
      - "5005:5005"
    volumes:
      - ./src:/app/src
      - ./pom.xml:/app/pom.xml
      - ~/.m2:/root/.m2  # Cache Maven dependencies
    depends_on:
      - postgres
      - redis
    networks:
      network:
        ipv4_address: 172.19.0.10
    restart: always

volumes:
  postgres_data:

networks:
  network:
    driver: bridge
